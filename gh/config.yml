editor:
git_protocol: ssh
glamour_style: dark
pager:
prompt: enabled
aliases:
    # co: pr checkout
    co: |
        !gh pr list | fzf --ansi --preview 'gh pr view {1}' --header-lines 3 | awk '{print $1}' | xargs gh pr checkout 2> /dev/null || true
    diff: pr diff
    merge: pr merge
    add: issue create --title
    close: issue close
    edit: issue edit
    mine: issue list -a @me
    del: |
        !gh api -X DELETE "repos/$GITUSER/$1"
    status: |
        !gh api graphql -f emoji="${1%% *}" -f msg="${1#* }" -f query='
          mutation ($msg: String!, $emoji: String) {
            changeUserStatus(input:{message:$msg,emoji:$emoji}) {
              status { message, emoji }
            }
          }'
    orgs: |
        !gh api --paginate graphql  -f query='
        query {
          viewer {
            id
            name
            organizations(first: 100) {
              nodes {
                id
                name
              }
            }
          }
        } ' --jq '.data.viewer.organizations[][] | .id + " " + .name'
    repos: |
        !gh api --paginate graphql -f owner="$1" -f query='
          query($owner: String!, $per_page: Int = 100, $endCursor: String) {
            repositoryOwner(login: $owner) {
              repositories(first: $per_page, after: $endCursor, ownerAffiliations: OWNER) {
                nodes { nameWithOwner }
                pageInfo { hasNextPage endCursor }
              }
            }
          }
        ' --jq '.data.repositoryOwner.repositories.nodes[].nameWithOwner' | sort
version: "1"
