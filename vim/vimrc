"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => (Neo)Vim Configuration
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" disable plugins if running vi
if v:progname ==# 'vi'
  set noloadplugins
endif

" define a primary leader key
let mapleader=' '
" define a secondary leader key
let maplocalleader=','

" ensure XDG_CACHE_HOME is defined
if empty($XDG_CACHE_HOME)
  let $XDG_CACHE_HOME=$HOME.'/.cache'
endif

" ensure XDG_DATA_HOME is defined
if empty($XDG_DATA_HOME)
  let $XDG_DATA_HOME=$HOME.'/.local/share'
endif

" ensure backup directory exists
if !isdirectory($XDG_CACHE_HOME . '/vim/backup')
  call mkdir($XDG_CACHE_HOME . '/vim/backup', 'p')
endif
" ensure swap directory exists
if !isdirectory($XDG_CACHE_HOME . '/vim/swap')
  call mkdir($XDG_CACHE_HOME . '/vim/swap', 'p')
endif
" ensure undo directory exists
if !isdirectory($XDG_CACHE_HOME . '/vim/undo')
  call mkdir($XDG_CACHE_HOME . '/vim/undo', 'p')
endif
" ensure shada directory exists
if !isdirectory($XDG_DATA_HOME . '/vim/shada')
  call mkdir($XDG_DATA_HOME . '/vim/shada', 'p')
endif
" ensure netrw directory exists
if !isdirectory($XDG_DATA_HOME . '/vim/netrw')
  call mkdir($XDG_DATA_HOME . '/vim/netrw', 'p')
endif

" set viminfo
set viminfo='10,\"100,:20,%,n$XDG_DATA_HOME/vim/shada/viminfo

" lood remote plugins
source <sfile>:h/autoload/plugins.vim
