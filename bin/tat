#!/bin/bash

if [[ $# -eq 0 ]]; then
  path=$PWD
elif [[ $# -eq 1 ]]; then
  if [ "$1" == "fzf" ]; then
    projects_dir=""
    for f in "$PROJECTS_DIR"/*; do
      if [ -z "$projects_dir" ]; then
        projects_dir="$f"
      else
        projects_dir="$projects_dir $f"
      fi
    done
    # shellcheck disable=SC2207
    projects_dir=($(echo "$projects_dir" | cut -d " " --output-delimiter=" " -f 1-))
    path=$(find -L "$HOME" "$HOME/Git" "$HOME/Projects" "${projects_dir[@]}" \
      -mindepth 1 -maxdepth 1 \
      | fzf --height=100% --reverse --header='Create/Open Session' \
        --preview '(bat --color "always" {1}/README.md ||
          cat {1}/README.md ||
          exa -lh --icons {1} ||
          ls -lh {1}) 2> /dev/null')
    if [ "$path" == "" ]; then
      exit 0
    fi
  elif [ "$1" == "switch" ]; then
    if not_in_tmux; then
      echo "command only available within tmux"
      exit 1
    fi
    tmux list-sessions -F '#S' \
      | awk 'BEGIN {ORS=" "} {print $1, NR, "\"switch-client -t", $1 "\""}' \
      | xargs tmux display-menu -T "Switch session"
    exit 0
  else
    echo "'fzf' and 'switch' are the only supported arguments at this time"
    exit 1
  fi
else
  echo "unsupported number of arguments: 0 or 1 expected, got $#"
  exit 1
fi

session_name="$(basename "$path" | tr . _)"

not_in_tmux() {
  [ -z "$TMUX" ]
}

session_exists() {
  tmux list-sessions | sed -E 's/:.*$//' | grep -q "^$session_name$"
}

create_detached_session() {
  (TMUX='' tmux new-session -Ad -s "$session_name" -c "$path")
}

create_if_needed_and_attach() {
  if not_in_tmux; then
    tmux new-session -As "$session_name" -c "$path"
  else
    if ! session_exists; then
      create_detached_session
    fi
    tmux switch-client -t "$session_name"
  fi
}

create_if_needed_and_attach
