function tmux() {
	emulate -L zsh

	# make sure even pre-existing tmux sessions use the latest SSH_AUTH_SOCK.
	local SOCK_SYMLINK=~/.ssh/ssh_auth_sock
	if [ -r "$SSH_AUTH_SOCK" -a ! -L "$SSH_AUTH_SOCK" ]; then
		ln -sf "$SSH_AUTH_SOCK" $SOCK_SYMLINK
	fi

	# if provided with args, pass them through.
	if [[ -n "$@" ]]; then
		env SSH_AUTH_SOCK=$SOCK_SYMLINK tmux "$@"
		return
	fi

	# check for .tmux file (poor man's tmuxinator).
	if [ -x .tmux ]; then
		# prompt the first time we see a given .tmux file before running it.
		local DIGEST="$(openssl dgst -sha512 .tmux)"
		if ! grep -q "$DIGEST" ${TMUX_CONFIG_HOME}/tmux.digests 2> /dev/null; then
			cat .tmux
			read -k 1 -r \
			'REPLY?Trust (and run) this .tmux file? (t = trust, otherwise = skip) '
			echo
			if [[ $REPLY =~ ^[Tt]$ ]]; then
				echo "$DIGEST" >> ${TMUX_CONFIG_HOME}/tmux.digests
				./.tmux
				return
			fi
		else
			./.tmux
			return
		fi
	fi

	# attach to existing session, or create one, based on current directory.
	local SESSION_NAME=$(basename "${$(pwd)//[.:]/_}")
	env SSH_AUTH_SOCK=$SOCK_SYMLINK tmux new -A -s "$SESSION_NAME"
}