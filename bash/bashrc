###############################################################
# Environment Variables
###############################################################
# helper functions to trim duplicate occurences from a string
get_var () {
	eval 'printf "%s\n" "${'"$1"'}"'
}

set_var () {
	eval "$1=\"\$2\""
}

dedup_pathvar () {
	pathvar_name="$1"
	pathvar_value="$(get_var "$pathvar_name")"
	deduped_path="$(perl -e 'print join(":",grep { not $seen{$_}++ } split(/:/, $ARGV[0]))' "$pathvar_value")"
	set_var "$pathvar_name" "$deduped_path"
}

# base directory for user local binaries
LOCAL="${HOME}/.local/bin"

# include directory in PATH
test -s "${LOCAL}" && \
export PATH=$PATH:$LOCAL

# ensure no duplicate entries are present in PATH
dedup_pathvar PATH

###############################################################
# Directories
###############################################################
# base directory for configuration files
CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"

# base directory for bash configuration files
BASH_CONFIG_HOME="${CONFIG_HOME}/bash"

# base directory for tmux bash configuration files
TMUX_CONFIG_HOME="${CONFIG_HOME}/tmux"

# base directory for vim configuration files
VIM_CONFIG_HOME="${CONFIG_HOME}/vim"

###############################################################
# General Options
###############################################################
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# trim long paths in the prompt (requires Bash 4.x)
PROMPT_DIRTRIM=4

# enable history expansion with space
bind Space:magic-space

# turn on recursive globbing (enables ** to recurse all directories)
shopt -s globstar 2> /dev/null

# case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob;

# disable the system bell
bind "set bell-style none"

# keymap to clear scrollback buffer
bind -x '"\C-l": clear'

# alternate option clear the scrollback buffer
alias cls='printf "\033c"'

###############################################################
# Tab Completion
###############################################################
# perform file completion in a case insensitive fashion
bind "set completion-ignore-case on"

# treat hyphens and underscores as equivalent
bind "set completion-map-case on"

# display matches for ambiguous patterns at first tab press
bind "set show-all-if-ambiguous on"

# immediately add a trailing slash when autocompleting symlinks to directories
bind "set mark-symlinked-directories on"

###############################################################
# History
###############################################################
# append to the history file, don't overwrite it
shopt -s histappend

# save multi-line commands as one command
shopt -s cmdhist

# record each line as it gets issued
PROMPT_COMMAND='history -a'

# define max recording length for history
HISTSIZE=500000
HISTFILESIZE=100000

# don't put duplicate lines in the history.
export HISTCONTROL=erasedups:ignoreboth

# ignore commands that have no forensic value
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"

# use standard ISO 8601 timestamp
export HISTTIMEFORMAT='%F %T '

# enable incremental history search with up/down arrows
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'
bind '"\e[C": forward-char'
bind '"\e[D": backward-char'

# define history file location
export HISTFILE="${BASH_CONFIG_HOME}/bash_history"

###############################################################
# Navigation
###############################################################
# prepend cd to directory names automatically
shopt -s autocd 2> /dev/null

# auto-correct spelling errors during tab-completion
shopt -s dirspell 2> /dev/null
# auto-correct spelling errors in arguments supplied to cd
shopt -s cdspell 2> /dev/null

# colon-separated list of directories that define the base directory for
# arbitrary cd commands
CDPATH="."

# list directory contents after changing to it
function cd() {
	builtin cd "$@" &> /dev/null
	ls
}

###############################################################
# Color
###############################################################
# enable true color support
export TERM=xterm-256color

# enable syntax highlighting for less
export LESS="-iFMRX"
export LESSCOLOR=always
export LESSCOLORIZER=/usr/bin/src-hilite-lesspipe.sh

# set location for less history file
export LESSHISTFILE="${CONFIG_HOME}/less/less_history"

# enable dircolors if it is available
if hash dircolors 2>/dev/null; then
	test -r ${BASH_CONFIG_HOME}/dircolors && \
	eval "$(dircolors -b ${BASH_CONFIG_HOME}/dircolors)" \
	|| eval "$(dircolors -b)"

	# enable color support for ls
	alias ls='ls --color=auto --ignore=ntuser\.* --ignore=NTUSER\.* --almost-all --group-directories-first'
	# enable color support for grep
	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# wrap diff commands and colorize the output
hash colordiff 2>/dev/null && alias diff=colordiff

###############################################################
# Workspace
###############################################################
# set the default editor
export EDITOR=/usr/bin/vim

# set location for vim runtime configuration
export MYVIMRC="${VIM_CONFIG_HOME}/vimrc"
__viminit=":set runtimepath+=${VIM_CONFIG_HOME},"
__viminit+="${VIM_CONFIG_HOME}/after"
__viminit+="|set viminfo='10,\\\"100,:20,%,n${VIM_CONFIG_HOME}/viminfo"
__viminit+="|:source ${MYVIMRC}"
__viminit+="|:set runtimepath+=${VIM_CONFIG_HOME},"
__viminit+="${VIM_CONFIG_HOME}/after"
export VIMINIT=$__viminit
unset __viminit

# set location for tmux runtime configuration
hash tmux 2>/dev/null && alias tmux='tmux -f "${TMUX_CONFIG_HOME}/tmux.conf"'

# setup shell prompt
test -s "${BASH_CONFIG_HOME}/prompt.bash" && \
source "${BASH_CONFIG_HOME}/prompt.bash"

# define alias to reload bash configuration
alias reload='source "${BASH_CONFIG_HOME}/bashrc"'

###############################################################
# fzf
###############################################################
if hash fzf 2>/dev/null; then
	# load fzf keybinds
	test -s "${BASH_CONFIG_HOME}/plugins/fzf" && \
	source "${BASH_CONFIG_HOME}/plugins/fzf"

	# Use ~~ as the trigger sequence instead of the default **
	export FZF_COMPLETION_TRIGGER='?'

	# set fd as the default source for fzf
	export FZF_DEFAULT_COMMAND='fd -HI --hidden --follow --type file --color=always'
	export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

	# define default options for fzf
	if test -x `which bat`; then
		__fzf_preview_opts="--ansi --preview-window 'right:60%' "
		__fzf_preview_opts+="--preview 'bat --color=always "
		__fzf_preview_opts+="--style=header,grid --line-range :300 {}'"
		export FZF_DEFAULT_OPTS=$__fzf_preview_opts
		unset __fzf_preview_opts
	fi

	export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'
	 --color=dark
	 --color=fg:#bebebe,bg:-1,hl:#a3be8c
	 --color=fg+:#e7ebf1,bg+:-1,hl+:#a3be8c
	 --color=info:#4c566a,prompt:#81a1c1,pointer:#bf616a
	 --color=marker:#ebcb8b,spinner:#4c566a,header:#5f5f5f'
fi

###############################################################
# bat
###############################################################
# define configuration path for bat
if hash bat 2>/dev/null; then
	export BAT_CONFIG_PATH="${CONFIG_HOME}/bat/bat.conf"
fi

###############################################################
# Dotfiles
###############################################################
# define alias to manage dotfiles repository
alias dot='/usr/bin/git --git-dir=$HOME/Git/dotfiles/.git --work-tree=$CONFIG_HOME'

###############################################################
# _Custom
###############################################################
# check for machine-specific rc file and source it if available
test -s "${BASH_CONFIG_HOME}/private.bash" && \
source "${BASH_CONFIG_HOME}/private.bash"
